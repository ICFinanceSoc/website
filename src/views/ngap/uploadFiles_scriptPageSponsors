<script>
$(function () {
    'use strict';
    /* $('textarea[name=event-information]').text($('textarea[name=event-information]').text() + "<img src='/' />"); */
    // Initialize the jQuery File Upload widget:
    $('#fileupload').fileupload({
        // Uncomment the following to send cross-domain cookies:
        //xhrFields: {withCredentials: true},
        url: '{{path('ngap')}}uploads/json/sponsors'

    });

    var updateInsertButtons = function() {
        $("button.insert").each(function(){
                    $(this).click(function(){
                        if ($(this).hasClass('logo')) {
                            $(".edit-logo > img").attr('src', $(this).attr('data-url'));
                            $("input[name=sponsor_logo]").attr('value', $(this).attr('data-url'));
                        }
                        else
                            $("textarea.tinymce").tinymce().execCommand('mceInsertContent', false, "<img src='" + $(this).attr('data-url') + "' />");
                        //$('textarea[name=event-information]').text($('textarea[name=event-information]').text() + "<img src='" + $(this).attr('data-url') + "' />");
                    return false;
                    })
                });
    }

    $('#fileupload').fileupload('option', 'done', function(e, data) {
        var that = $(this).data('blueimp-fileupload') ||
                        $(this).data('fileupload'),
                    files = that._getFilesFromResponse(data),
                    template,
                    deferred;
                if (data.context) {
                    data.context.each(function (index) {
                        var file = files[index] ||
                                {error: 'Empty file upload result'},
                            deferred = that._addFinishedDeferreds();
                        if (file.error) {
                            that._adjustMaxNumberOfFiles(1);
                        }
                        that._transition($(this)).done(
                            function () {
                                var node = $(this);
                                template = that._renderDownload([file])
                                    .replaceAll(node);
                                that._forceReflow(template);
                                that._transition(template).done(
                                    function () {
                                        updateInsertButtons();
                                        data.context = $(this);
                                        that._trigger('completed', e, data);
                                        that._trigger('finished', e, data);
                                        deferred.resolve();
                                    }
                                );
                            }
                        );
                    });
                } else {
                    if (files.length) {
                        $.each(files, function (index, file) {
                            if (data.maxNumberOfFilesAdjusted && file.error) {
                                that._adjustMaxNumberOfFiles(1);
                            } else if (!data.maxNumberOfFilesAdjusted &&
                                    !file.error) {
                                that._adjustMaxNumberOfFiles(-1);
                            }
                        });
                        data.maxNumberOfFilesAdjusted = true;
                    }
                    template = that._renderDownload(files)
                        .appendTo(that.options.filesContainer);
                    that._forceReflow(template);
                    deferred = that._addFinishedDeferreds();
                    that._transition(template).done(
                        function () {
                            updateInsertButtons();
                            data.context = $(this);
                            that._trigger('completed', e, data);
                            that._trigger('finished', e, data);
                            deferred.resolve();
                        
                        }    
                    );
                }

                

    });

    // Enable iframe cross-domain access via redirect option:
    $('#fileupload').fileupload(
        'option',
        'redirect',
        window.location.href.replace(
            /\/[^\/]*$/,
            '/cors/result.html?%s'
        )
    );
    
    // Load existing files:
    $.ajax({
        // Uncomment the following to send cross-domain cookies:
        //xhrFields: {withCredentials: true},
        url: $('#fileupload').fileupload('option', 'url'),
        dataType: 'json',
        context: $('#fileupload')[0]
    }).done(function (result) {
        $(this).fileupload('option', 'done')
            .call(this, null, {result: result});

        //console.log($(this).fileupload('option', 'done'))
        

        
    });
    
});</script>

<script id="template-upload" type="text/x-tmpl">
{{ '{%' }} for (var i=0, file; file=o.files[i]; i++) { {{ '%}' }}
    <tr class="template-upload fade">
        <td class="preview"><span class="fade"></span></td>
        <td class="name"><span>{{ '{%' }}=file.name%}</span></td>
        <td class="size"><span>{{ '{%' }}=o.formatFileSize(file.size)%}</span></td>
        {{ '{%' }} if (file.error) { %}
            <td class="error" colspan="2"><span class="label label-important">Error</span> {{ '{%' }}=file.error%}</td>
        {{ '{%' }} } else if (o.files.valid && !i) { %}
            <td>
                <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="bar" style="width:0%;"></div></div>
            </td>
            <td class="start">{{ '{%' }} if (!o.options.autoUpload) { %}
                <button class="btn btn-primary">
                    <i class="icon-upload icon-white"></i>
                    <span>Start</span>
                </button>
            {{ '{%' }} } %}</td>
        {{ '{%' }} } else { %}
            <td colspan="2"></td>
        {{ '{%' }} } %}
        <td class="cancel">{{ '{%' }} if (!i) { %}
            <button class="btn btn-warning">
                <i class="icon-ban-circle icon-white"></i>
                <span>Cancel</span>
            </button>
        {{ '{%' }} } %}</td>
    </tr>
{{ '{%' }} } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
{{ '{%' }} for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade">
        {{ '{%' }} if (file.error) { %}
            <td></td>
            <td class="name"><span>{{ '{%' }}=file.name%}</span></td>
            <td class="size"><span>{{ '{%' }}=o.formatFileSize(file.size)%}</span></td>
            <td class="error" colspan="2"><span class="label label-important">Error</span> {{ '{%' }}=file.error%}</td>
        {{ '{%' }} } else { %}
            <td class="preview">{{ '{%' }} if (file.thumbnail_url) { %}
                <a href="{{ '{%' }}=file.url%}" title="{{ '{%' }}=file.name%}" data-gallery="gallery" download="{{ '{%' }}=file.name%}"><img src="{{ '{%' }}=file.thumbnail_url%}"></a>
            {{ '{%' }} } %}</td>
            <td class="name">
                <a href="{{ '{%' }}=file.url%}" title="{{ '{%' }}=file.name%}" data-gallery="{{ '{%' }}=file.thumbnail_url&&'gallery'%}" download="{{ '{%' }}=file.name%}">{{ '{%' }}=file.name%}</a>
            </td>
            <td class="size"><span>{{ '{%' }}=o.formatFileSize(file.size)%}</span></td>
            <td colspan="2"></td>
        {{ '{%' }} } %}
        <td class="delete">
            <button class="btn btn-warning insert" data-url="{{ '{%' }}=file.url%}">Insert</button>
            <button class="btn btn-warning insert logo" data-url="{{ '{%' }}=file.url%}">Set Logo</button>
        </td>
    </tr>
{{ '{%' }} } %}
</script>